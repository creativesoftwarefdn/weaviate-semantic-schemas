{
    "context": "http://schema.org",
    "type": "action",
    "name": "schema.org - Action",
    "maintainer": "yourfriends@weaviate.com",
    "schema": {
        "SearchAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "query": {
                "type": "string",
                "description": "A sub property of instrument. The query used on this action."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "Action": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "InteractAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "RegisterAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "BefriendAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "MarryAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "CommunicateAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "about": {
                "type": "string",
                "description": "The subject matter of the content."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "language": {
                "type": "string",
                "description": "A sub property of instrument. The language used on this action."
            },
            "recipient": {
                "type": "string",
                "description": "A sub property of participant. The participant who is at the receiving end of the action."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            },
            "inLanguage": {
                "type": "string",
                "description": "The language of the content or performance or used in an action. Please use one of the language codes from the <a href=\"http://tools.ietf.org/html/bcp47\">IETF BCP 47 standard</a>. See also <a class=\"localLink\" href=\"http://schema.org/availableLanguage\">availableLanguage</a>."
            }
        },
        "ReplyAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "resultComment": {
                "type": "string",
                "description": "A sub property of result. The Comment created or sent as a result of this action."
            },
            "about": {
                "type": "string",
                "description": "The subject matter of the content."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "language": {
                "type": "string",
                "description": "A sub property of instrument. The language used on this action."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "recipient": {
                "type": "string",
                "description": "A sub property of participant. The participant who is at the receiving end of the action."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            },
            "inLanguage": {
                "type": "string",
                "description": "The language of the content or performance or used in an action. Please use one of the language codes from the <a href=\"http://tools.ietf.org/html/bcp47\">IETF BCP 47 standard</a>. See also <a class=\"localLink\" href=\"http://schema.org/availableLanguage\">availableLanguage</a>."
            }
        },
        "CheckOutAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "about": {
                "type": "string",
                "description": "The subject matter of the content."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "language": {
                "type": "string",
                "description": "A sub property of instrument. The language used on this action."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "recipient": {
                "type": "string",
                "description": "A sub property of participant. The participant who is at the receiving end of the action."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            },
            "inLanguage": {
                "type": "string",
                "description": "The language of the content or performance or used in an action. Please use one of the language codes from the <a href=\"http://tools.ietf.org/html/bcp47\">IETF BCP 47 standard</a>. See also <a class=\"localLink\" href=\"http://schema.org/availableLanguage\">availableLanguage</a>."
            }
        },
        "CheckInAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "about": {
                "type": "string",
                "description": "The subject matter of the content."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "language": {
                "type": "string",
                "description": "A sub property of instrument. The language used on this action."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "recipient": {
                "type": "string",
                "description": "A sub property of participant. The participant who is at the receiving end of the action."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            },
            "inLanguage": {
                "type": "string",
                "description": "The language of the content or performance or used in an action. Please use one of the language codes from the <a href=\"http://tools.ietf.org/html/bcp47\">IETF BCP 47 standard</a>. See also <a class=\"localLink\" href=\"http://schema.org/availableLanguage\">availableLanguage</a>."
            }
        },
        "InformAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "about": {
                "type": "string",
                "description": "The subject matter of the content."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "language": {
                "type": "string",
                "description": "A sub property of instrument. The language used on this action."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "recipient": {
                "type": "string",
                "description": "A sub property of participant. The participant who is at the receiving end of the action."
            },
            "event": {
                "type": "string",
                "description": "Upcoming or past event associated with this place, organization, or action."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            },
            "inLanguage": {
                "type": "string",
                "description": "The language of the content or performance or used in an action. Please use one of the language codes from the <a href=\"http://tools.ietf.org/html/bcp47\">IETF BCP 47 standard</a>. See also <a class=\"localLink\" href=\"http://schema.org/availableLanguage\">availableLanguage</a>."
            }
        },
        "ConfirmAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "about": {
                "type": "string",
                "description": "The subject matter of the content."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "language": {
                "type": "string",
                "description": "A sub property of instrument. The language used on this action."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "recipient": {
                "type": "string",
                "description": "A sub property of participant. The participant who is at the receiving end of the action."
            },
            "event": {
                "type": "string",
                "description": "Upcoming or past event associated with this place, organization, or action."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            },
            "inLanguage": {
                "type": "string",
                "description": "The language of the content or performance or used in an action. Please use one of the language codes from the <a href=\"http://tools.ietf.org/html/bcp47\">IETF BCP 47 standard</a>. See also <a class=\"localLink\" href=\"http://schema.org/availableLanguage\">availableLanguage</a>."
            }
        },
        "RsvpAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "rsvpResponse": {
                "type": "string",
                "description": "The response (yes, no, maybe) to the RSVP."
            },
            "about": {
                "type": "string",
                "description": "The subject matter of the content."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "comment": {
                "type": "string",
                "description": "Comments, typically from users."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "language": {
                "type": "string",
                "description": "A sub property of instrument. The language used on this action."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "recipient": {
                "type": "string",
                "description": "A sub property of participant. The participant who is at the receiving end of the action."
            },
            "event": {
                "type": "string",
                "description": "Upcoming or past event associated with this place, organization, or action."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "additionalNumberOfGuests": {
                "type": "string",
                "description": "If responding yes, the number of guests who will attend in addition to the invitee."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            },
            "inLanguage": {
                "type": "string",
                "description": "The language of the content or performance or used in an action. Please use one of the language codes from the <a href=\"http://tools.ietf.org/html/bcp47\">IETF BCP 47 standard</a>. See also <a class=\"localLink\" href=\"http://schema.org/availableLanguage\">availableLanguage</a>."
            }
        },
        "InviteAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "about": {
                "type": "string",
                "description": "The subject matter of the content."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "event": {
                "type": "string",
                "description": "Upcoming or past event associated with this place, organization, or action."
            },
            "language": {
                "type": "string",
                "description": "A sub property of instrument. The language used on this action."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "recipient": {
                "type": "string",
                "description": "A sub property of participant. The participant who is at the receiving end of the action."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            },
            "inLanguage": {
                "type": "string",
                "description": "The language of the content or performance or used in an action. Please use one of the language codes from the <a href=\"http://tools.ietf.org/html/bcp47\">IETF BCP 47 standard</a>. See also <a class=\"localLink\" href=\"http://schema.org/availableLanguage\">availableLanguage</a>."
            }
        },
        "ShareAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "about": {
                "type": "string",
                "description": "The subject matter of the content."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "language": {
                "type": "string",
                "description": "A sub property of instrument. The language used on this action."
            },
            "recipient": {
                "type": "string",
                "description": "A sub property of participant. The participant who is at the receiving end of the action."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            },
            "inLanguage": {
                "type": "string",
                "description": "The language of the content or performance or used in an action. Please use one of the language codes from the <a href=\"http://tools.ietf.org/html/bcp47\">IETF BCP 47 standard</a>. See also <a class=\"localLink\" href=\"http://schema.org/availableLanguage\">availableLanguage</a>."
            }
        },
        "AskAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "about": {
                "type": "string",
                "description": "The subject matter of the content."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "language": {
                "type": "string",
                "description": "A sub property of instrument. The language used on this action."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "recipient": {
                "type": "string",
                "description": "A sub property of participant. The participant who is at the receiving end of the action."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "question": {
                "type": "string",
                "description": "A sub property of object. A question."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            },
            "inLanguage": {
                "type": "string",
                "description": "The language of the content or performance or used in an action. Please use one of the language codes from the <a href=\"http://tools.ietf.org/html/bcp47\">IETF BCP 47 standard</a>. See also <a class=\"localLink\" href=\"http://schema.org/availableLanguage\">availableLanguage</a>."
            }
        },
        "CommentAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "resultComment": {
                "type": "string",
                "description": "A sub property of result. The Comment created or sent as a result of this action."
            },
            "about": {
                "type": "string",
                "description": "The subject matter of the content."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "language": {
                "type": "string",
                "description": "A sub property of instrument. The language used on this action."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "recipient": {
                "type": "string",
                "description": "A sub property of participant. The participant who is at the receiving end of the action."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            },
            "inLanguage": {
                "type": "string",
                "description": "The language of the content or performance or used in an action. Please use one of the language codes from the <a href=\"http://tools.ietf.org/html/bcp47\">IETF BCP 47 standard</a>. See also <a class=\"localLink\" href=\"http://schema.org/availableLanguage\">availableLanguage</a>."
            }
        },
        "UnRegisterAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "SubscribeAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "JoinAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "event": {
                "type": "string",
                "description": "Upcoming or past event associated with this place, organization, or action."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "LeaveAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "event": {
                "type": "string",
                "description": "Upcoming or past event associated with this place, organization, or action."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "FollowAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "followee": {
                "type": "string",
                "description": "A sub property of object. The person or organization being followed."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "FindAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "CheckAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "DiscoverAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "TrackAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "deliveryMethod": {
                "type": "string",
                "description": "A sub property of instrument. The method of delivery."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "UpdateAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "collection": {
                "type": "string",
                "description": "A sub property of object. The collection target of the action."
            },
            "targetCollection": {
                "type": "string",
                "description": "A sub property of object. The collection target of the action."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "AddAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "collection": {
                "type": "string",
                "description": "A sub property of object. The collection target of the action."
            },
            "targetCollection": {
                "type": "string",
                "description": "A sub property of object. The collection target of the action."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "InsertAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "collection": {
                "type": "string",
                "description": "A sub property of object. The collection target of the action."
            },
            "targetCollection": {
                "type": "string",
                "description": "A sub property of object. The collection target of the action."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "toLocation": {
                "type": "string",
                "description": "A sub property of location. The final location of the object or the agent after the action."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "AppendAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "collection": {
                "type": "string",
                "description": "A sub property of object. The collection target of the action."
            },
            "targetCollection": {
                "type": "string",
                "description": "A sub property of object. The collection target of the action."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "toLocation": {
                "type": "string",
                "description": "A sub property of location. The final location of the object or the agent after the action."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "PrependAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "collection": {
                "type": "string",
                "description": "A sub property of object. The collection target of the action."
            },
            "targetCollection": {
                "type": "string",
                "description": "A sub property of object. The collection target of the action."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "toLocation": {
                "type": "string",
                "description": "A sub property of location. The final location of the object or the agent after the action."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "DeleteAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "collection": {
                "type": "string",
                "description": "A sub property of object. The collection target of the action."
            },
            "targetCollection": {
                "type": "string",
                "description": "A sub property of object. The collection target of the action."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "ReplaceAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "collection": {
                "type": "string",
                "description": "A sub property of object. The collection target of the action."
            },
            "targetCollection": {
                "type": "string",
                "description": "A sub property of object. The collection target of the action."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "replacer": {
                "type": "string",
                "description": "A sub property of object. The object that replaces."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "replacee": {
                "type": "string",
                "description": "A sub property of object. The object that is being replaced."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "PlayAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "event": {
                "type": "string",
                "description": "Upcoming or past event associated with this place, organization, or action."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "audience": {
                "type": "string",
                "description": "An intended audience, i.e. a group for whom something was created."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "PerformAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "entertainmentBusiness": {
                "type": "string",
                "description": "A sub property of location. The entertainment business where the action occurred."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "event": {
                "type": "string",
                "description": "Upcoming or past event associated with this place, organization, or action."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "audience": {
                "type": "string",
                "description": "An intended audience, i.e. a group for whom something was created."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "ExerciseAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "fromLocation": {
                "type": "string",
                "description": "A sub property of location. The original location of the object or the agent before the action."
            },
            "diet": {
                "type": "string",
                "description": "A sub property of instrument. The diet used in this action."
            },
            "exerciseCourse": {
                "type": "string",
                "description": "A sub property of location. The course where this action was taken."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "opponent": {
                "type": "string",
                "description": "A sub property of participant. The opponent on this action."
            },
            "distance": {
                "type": "string",
                "description": "The distance travelled, e.g. exercising or travelling."
            },
            "course": {
                "type": "string",
                "description": "A sub property of location. The course where this action was taken."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "event": {
                "type": "string",
                "description": "Upcoming or past event associated with this place, organization, or action."
            },
            "sportsActivityLocation": {
                "type": "string",
                "description": "A sub property of location. The sports activity location where this action occurred."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "sportsEvent": {
                "type": "string",
                "description": "A sub property of location. The sports event where this action occurred."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "exerciseRelatedDiet": {
                "type": "string",
                "description": "A sub property of instrument. The diet used in this action."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "sportsTeam": {
                "type": "string",
                "description": "A sub property of participant. The sports team that participated on this action."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "exercisePlan": {
                "type": "string",
                "description": "A sub property of instrument. The exercise plan used on this action."
            },
            "exerciseType": {
                "type": "string",
                "description": "Type(s) of exercise or activity, such as strength training, flexibility training, aerobics, cardiac rehabilitation, etc."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "audience": {
                "type": "string",
                "description": "An intended audience, i.e. a group for whom something was created."
            },
            "toLocation": {
                "type": "string",
                "description": "A sub property of location. The final location of the object or the agent after the action."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "ControlAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "ResumeAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "ActivateAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "SuspendAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "DeactivateAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "OrganizeAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "ApplyAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "BookmarkAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "PlanAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "scheduledTime": {
                "type": "string",
                "description": "The time the object is scheduled to."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "ReserveAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "scheduledTime": {
                "type": "string",
                "description": "The time the object is scheduled to."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "CancelAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "scheduledTime": {
                "type": "string",
                "description": "The time the object is scheduled to."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "ScheduleAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "scheduledTime": {
                "type": "string",
                "description": "The time the object is scheduled to."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "AllocateAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "purpose": {
                "type": "string",
                "description": "A goal towards an action is taken. Can be concrete or abstract."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "RejectAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "purpose": {
                "type": "string",
                "description": "A goal towards an action is taken. Can be concrete or abstract."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "AuthorizeAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "recipient": {
                "type": "string",
                "description": "A sub property of participant. The participant who is at the receiving end of the action."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "purpose": {
                "type": "string",
                "description": "A goal towards an action is taken. Can be concrete or abstract."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "AcceptAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "purpose": {
                "type": "string",
                "description": "A goal towards an action is taken. Can be concrete or abstract."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "AssignAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "purpose": {
                "type": "string",
                "description": "A goal towards an action is taken. Can be concrete or abstract."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "TradeAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "priceSpecification": {
                "type": "string",
                "description": "One or more detailed price specifications, indicating the unit price and delivery or payment charges."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "price": {
                "type": "string",
                "description": "<p>The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.</p>\n\n<p>Usage guidelines:</p>\n\n<ul>\n<li>Use the <a class=\"localLink\" href=\"http://schema.org/priceCurrency\">priceCurrency</a> property (with <a href=\"http://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 codes</a> e.g. \"USD\") instead of\n  including <a href=\"http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign\">ambiguous symbols</a> such as '$' in the value.</li>\n<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>\n<li>Note that both <a href=\"http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute\">RDFa</a> and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values alongside more human-friendly formatting.</li>\n<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>\n</ul>\n"
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "PreOrderAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "priceSpecification": {
                "type": "string",
                "description": "One or more detailed price specifications, indicating the unit price and delivery or payment charges."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "price": {
                "type": "string",
                "description": "<p>The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.</p>\n\n<p>Usage guidelines:</p>\n\n<ul>\n<li>Use the <a class=\"localLink\" href=\"http://schema.org/priceCurrency\">priceCurrency</a> property (with <a href=\"http://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 codes</a> e.g. \"USD\") instead of\n  including <a href=\"http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign\">ambiguous symbols</a> such as '$' in the value.</li>\n<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>\n<li>Note that both <a href=\"http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute\">RDFa</a> and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values alongside more human-friendly formatting.</li>\n<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>\n</ul>\n"
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "TipAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "recipient": {
                "type": "string",
                "description": "A sub property of participant. The participant who is at the receiving end of the action."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "priceSpecification": {
                "type": "string",
                "description": "One or more detailed price specifications, indicating the unit price and delivery or payment charges."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "price": {
                "type": "string",
                "description": "<p>The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.</p>\n\n<p>Usage guidelines:</p>\n\n<ul>\n<li>Use the <a class=\"localLink\" href=\"http://schema.org/priceCurrency\">priceCurrency</a> property (with <a href=\"http://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 codes</a> e.g. \"USD\") instead of\n  including <a href=\"http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign\">ambiguous symbols</a> such as '$' in the value.</li>\n<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>\n<li>Note that both <a href=\"http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute\">RDFa</a> and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values alongside more human-friendly formatting.</li>\n<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>\n</ul>\n"
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "DonateAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "recipient": {
                "type": "string",
                "description": "A sub property of participant. The participant who is at the receiving end of the action."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "priceSpecification": {
                "type": "string",
                "description": "One or more detailed price specifications, indicating the unit price and delivery or payment charges."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "price": {
                "type": "string",
                "description": "<p>The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.</p>\n\n<p>Usage guidelines:</p>\n\n<ul>\n<li>Use the <a class=\"localLink\" href=\"http://schema.org/priceCurrency\">priceCurrency</a> property (with <a href=\"http://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 codes</a> e.g. \"USD\") instead of\n  including <a href=\"http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign\">ambiguous symbols</a> such as '$' in the value.</li>\n<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>\n<li>Note that both <a href=\"http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute\">RDFa</a> and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values alongside more human-friendly formatting.</li>\n<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>\n</ul>\n"
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "OrderAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "deliveryMethod": {
                "type": "string",
                "description": "A sub property of instrument. The method of delivery."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "priceSpecification": {
                "type": "string",
                "description": "One or more detailed price specifications, indicating the unit price and delivery or payment charges."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "price": {
                "type": "string",
                "description": "<p>The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.</p>\n\n<p>Usage guidelines:</p>\n\n<ul>\n<li>Use the <a class=\"localLink\" href=\"http://schema.org/priceCurrency\">priceCurrency</a> property (with <a href=\"http://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 codes</a> e.g. \"USD\") instead of\n  including <a href=\"http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign\">ambiguous symbols</a> such as '$' in the value.</li>\n<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>\n<li>Note that both <a href=\"http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute\">RDFa</a> and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values alongside more human-friendly formatting.</li>\n<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>\n</ul>\n"
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "PayAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "recipient": {
                "type": "string",
                "description": "A sub property of participant. The participant who is at the receiving end of the action."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "priceSpecification": {
                "type": "string",
                "description": "One or more detailed price specifications, indicating the unit price and delivery or payment charges."
            },
            "purpose": {
                "type": "string",
                "description": "A goal towards an action is taken. Can be concrete or abstract."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "price": {
                "type": "string",
                "description": "<p>The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.</p>\n\n<p>Usage guidelines:</p>\n\n<ul>\n<li>Use the <a class=\"localLink\" href=\"http://schema.org/priceCurrency\">priceCurrency</a> property (with <a href=\"http://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 codes</a> e.g. \"USD\") instead of\n  including <a href=\"http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign\">ambiguous symbols</a> such as '$' in the value.</li>\n<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>\n<li>Note that both <a href=\"http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute\">RDFa</a> and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values alongside more human-friendly formatting.</li>\n<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>\n</ul>\n"
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "RentAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "landlord": {
                "type": "string",
                "description": "A sub property of participant. The owner of the real estate property."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "priceSpecification": {
                "type": "string",
                "description": "One or more detailed price specifications, indicating the unit price and delivery or payment charges."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "price": {
                "type": "string",
                "description": "<p>The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.</p>\n\n<p>Usage guidelines:</p>\n\n<ul>\n<li>Use the <a class=\"localLink\" href=\"http://schema.org/priceCurrency\">priceCurrency</a> property (with <a href=\"http://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 codes</a> e.g. \"USD\") instead of\n  including <a href=\"http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign\">ambiguous symbols</a> such as '$' in the value.</li>\n<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>\n<li>Note that both <a href=\"http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute\">RDFa</a> and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values alongside more human-friendly formatting.</li>\n<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>\n</ul>\n"
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "realEstateAgent": {
                "type": "string",
                "description": "A sub property of participant. The real estate agent involved in the action."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "BuyAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "vendor": {
                "type": "string",
                "description": "'vendor' is an earlier term for 'seller'."
            },
            "seller": {
                "type": "string",
                "description": "An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "priceSpecification": {
                "type": "string",
                "description": "One or more detailed price specifications, indicating the unit price and delivery or payment charges."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "warrantyPromise": {
                "type": "string",
                "description": "The warranty promise(s) included in the offer."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "price": {
                "type": "string",
                "description": "<p>The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.</p>\n\n<p>Usage guidelines:</p>\n\n<ul>\n<li>Use the <a class=\"localLink\" href=\"http://schema.org/priceCurrency\">priceCurrency</a> property (with <a href=\"http://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 codes</a> e.g. \"USD\") instead of\n  including <a href=\"http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign\">ambiguous symbols</a> such as '$' in the value.</li>\n<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>\n<li>Note that both <a href=\"http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute\">RDFa</a> and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values alongside more human-friendly formatting.</li>\n<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>\n</ul>\n"
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "SellAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "buyer": {
                "type": "string",
                "description": "A sub property of participant. The participant/person/organization that bought the object."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "priceSpecification": {
                "type": "string",
                "description": "One or more detailed price specifications, indicating the unit price and delivery or payment charges."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "warrantyPromise": {
                "type": "string",
                "description": "The warranty promise(s) included in the offer."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "price": {
                "type": "string",
                "description": "<p>The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.</p>\n\n<p>Usage guidelines:</p>\n\n<ul>\n<li>Use the <a class=\"localLink\" href=\"http://schema.org/priceCurrency\">priceCurrency</a> property (with <a href=\"http://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 codes</a> e.g. \"USD\") instead of\n  including <a href=\"http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign\">ambiguous symbols</a> such as '$' in the value.</li>\n<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>\n<li>Note that both <a href=\"http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute\">RDFa</a> and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values alongside more human-friendly formatting.</li>\n<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>\n</ul>\n"
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "QuoteAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "priceSpecification": {
                "type": "string",
                "description": "One or more detailed price specifications, indicating the unit price and delivery or payment charges."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "price": {
                "type": "string",
                "description": "<p>The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.</p>\n\n<p>Usage guidelines:</p>\n\n<ul>\n<li>Use the <a class=\"localLink\" href=\"http://schema.org/priceCurrency\">priceCurrency</a> property (with <a href=\"http://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 codes</a> e.g. \"USD\") instead of\n  including <a href=\"http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign\">ambiguous symbols</a> such as '$' in the value.</li>\n<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>\n<li>Note that both <a href=\"http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute\">RDFa</a> and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values alongside more human-friendly formatting.</li>\n<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>\n</ul>\n"
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "AchieveAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "TieAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "WinAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "loser": {
                "type": "string",
                "description": "A sub property of participant. The loser of the action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "LoseAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "winner": {
                "type": "string",
                "description": "A sub property of participant. The winner of the action."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "AssessAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "ReviewAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "resultReview": {
                "type": "string",
                "description": "A sub property of result. The review that resulted in the performing of the action."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "ReactAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "WantAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "EndorseAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "endorsee": {
                "type": "string",
                "description": "A sub property of participant. The person/organization being supported."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "DisagreeAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "DislikeAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "AgreeAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "LikeAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "ChooseAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "actionOption": {
                "type": "string",
                "description": "A sub property of object. The options subject to this action."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "option": {
                "type": "string",
                "description": "A sub property of object. The options subject to this action."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "VoteAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "actionOption": {
                "type": "string",
                "description": "A sub property of object. The options subject to this action."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "option": {
                "type": "string",
                "description": "A sub property of object. The options subject to this action."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "candidate": {
                "type": "string",
                "description": "A sub property of object. The candidate subject of this action."
            }
        },
        "IgnoreAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "MoveAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "fromLocation": {
                "type": "string",
                "description": "A sub property of location. The original location of the object or the agent before the action."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "toLocation": {
                "type": "string",
                "description": "A sub property of location. The final location of the object or the agent after the action."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "TravelAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "fromLocation": {
                "type": "string",
                "description": "A sub property of location. The original location of the object or the agent before the action."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "distance": {
                "type": "string",
                "description": "The distance travelled, e.g. exercising or travelling."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "toLocation": {
                "type": "string",
                "description": "A sub property of location. The final location of the object or the agent after the action."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "ArriveAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "fromLocation": {
                "type": "string",
                "description": "A sub property of location. The original location of the object or the agent before the action."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "toLocation": {
                "type": "string",
                "description": "A sub property of location. The final location of the object or the agent after the action."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "DepartAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "fromLocation": {
                "type": "string",
                "description": "A sub property of location. The original location of the object or the agent before the action."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "toLocation": {
                "type": "string",
                "description": "A sub property of location. The final location of the object or the agent after the action."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "ConsumeAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "expectsAcceptanceOf": {
                "type": "string",
                "description": "An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "ListenAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "expectsAcceptanceOf": {
                "type": "string",
                "description": "An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "EatAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "expectsAcceptanceOf": {
                "type": "string",
                "description": "An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "InstallAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "expectsAcceptanceOf": {
                "type": "string",
                "description": "An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "ViewAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "expectsAcceptanceOf": {
                "type": "string",
                "description": "An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "ReadAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "expectsAcceptanceOf": {
                "type": "string",
                "description": "An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "DrinkAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "expectsAcceptanceOf": {
                "type": "string",
                "description": "An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "UseAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "expectsAcceptanceOf": {
                "type": "string",
                "description": "An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "WearAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "expectsAcceptanceOf": {
                "type": "string",
                "description": "An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "WatchAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "expectsAcceptanceOf": {
                "type": "string",
                "description": "An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "CreateAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "PaintAction": {
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "WriteAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "language": {
                "type": "string",
                "description": "A sub property of instrument. The language used on this action."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            },
            "inLanguage": {
                "type": "string",
                "description": "The language of the content or performance or used in an action. Please use one of the language codes from the <a href=\"http://tools.ietf.org/html/bcp47\">IETF BCP 47 standard</a>. See also <a class=\"localLink\" href=\"http://schema.org/availableLanguage\">availableLanguage</a>."
            }
        },
        "PhotographAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "FilmAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "DrawAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "CookAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "recipe": {
                "type": "string",
                "description": "A sub property of instrument. The recipe/instructions used to perform the action."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "foodEvent": {
                "type": "string",
                "description": "A sub property of location. The specific food event where the action occurred."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            },
            "foodEstablishment": {
                "type": "string",
                "description": "A sub property of location. The specific food establishment where the action occurred."
            }
        },
        "TransferAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "fromLocation": {
                "type": "string",
                "description": "A sub property of location. The original location of the object or the agent before the action."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "toLocation": {
                "type": "string",
                "description": "A sub property of location. The final location of the object or the agent after the action."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "DownloadAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "fromLocation": {
                "type": "string",
                "description": "A sub property of location. The original location of the object or the agent before the action."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "toLocation": {
                "type": "string",
                "description": "A sub property of location. The final location of the object or the agent after the action."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "TakeAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "fromLocation": {
                "type": "string",
                "description": "A sub property of location. The original location of the object or the agent before the action."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "toLocation": {
                "type": "string",
                "description": "A sub property of location. The final location of the object or the agent after the action."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "GiveAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "fromLocation": {
                "type": "string",
                "description": "A sub property of location. The original location of the object or the agent before the action."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "recipient": {
                "type": "string",
                "description": "A sub property of participant. The participant who is at the receiving end of the action."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "toLocation": {
                "type": "string",
                "description": "A sub property of location. The final location of the object or the agent after the action."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "BorrowAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "fromLocation": {
                "type": "string",
                "description": "A sub property of location. The original location of the object or the agent before the action."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "lender": {
                "type": "string",
                "description": "A sub property of participant. The person that lends the object being borrowed."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "toLocation": {
                "type": "string",
                "description": "A sub property of location. The final location of the object or the agent after the action."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "MoneyTransfer": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "fromLocation": {
                "type": "string",
                "description": "A sub property of location. The original location of the object or the agent before the action."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "amount": {
                "type": "string",
                "description": "The amount of money."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "beneficiaryBank": {
                "type": "string",
                "description": "A bank or bank’s branch, financial institution or international financial institution operating the beneficiary’s bank account or releasing funds for the beneficiary"
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "toLocation": {
                "type": "string",
                "description": "A sub property of location. The final location of the object or the agent after the action."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "LendAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "fromLocation": {
                "type": "string",
                "description": "A sub property of location. The original location of the object or the agent before the action."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "borrower": {
                "type": "string",
                "description": "A sub property of participant. The person that borrows the object being lent."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "toLocation": {
                "type": "string",
                "description": "A sub property of location. The final location of the object or the agent after the action."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "ReceiveAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "fromLocation": {
                "type": "string",
                "description": "A sub property of location. The original location of the object or the agent before the action."
            },
            "deliveryMethod": {
                "type": "string",
                "description": "A sub property of instrument. The method of delivery."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "sender": {
                "type": "string",
                "description": "A sub property of participant. The participant who is at the sending end of the action."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "toLocation": {
                "type": "string",
                "description": "A sub property of location. The final location of the object or the agent after the action."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "ReturnAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "fromLocation": {
                "type": "string",
                "description": "A sub property of location. The original location of the object or the agent before the action."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "recipient": {
                "type": "string",
                "description": "A sub property of participant. The participant who is at the receiving end of the action."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "toLocation": {
                "type": "string",
                "description": "A sub property of location. The final location of the object or the agent after the action."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        },
        "SendAction": {
            "object": {
                "type": "string",
                "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>."
            },
            "url": {
                "type": "string",
                "description": "URL of the item."
            },
            "fromLocation": {
                "type": "string",
                "description": "A sub property of location. The original location of the object or the agent before the action."
            },
            "deliveryMethod": {
                "type": "string",
                "description": "A sub property of instrument. The method of delivery."
            },
            "participant": {
                "type": "string",
                "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>."
            },
            "disambiguatingDescription": {
                "type": "string",
                "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation."
            },
            "additionalType": {
                "type": "string",
                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally."
            },
            "error": {
                "type": "string",
                "description": "For failed actions, more information on the cause of the failure."
            },
            "potentialAction": {
                "type": "string",
                "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."
            },
            "endTime": {
                "type": "string",
                "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "name": {
                "type": "string",
                "description": "The name of the item."
            },
            "startTime": {
                "type": "string",
                "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions."
            },
            "identifier": {
                "type": "string",
                "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details."
            },
            "recipient": {
                "type": "string",
                "description": "A sub property of participant. The participant who is at the receiving end of the action."
            },
            "description": {
                "type": "string",
                "description": "A description of the item."
            },
            "result": {
                "type": "string",
                "description": "The result produced in the action. e.g. John wrote <em>a book</em>."
            },
            "image": {
                "type": "string",
                "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "target": {
                "type": "string",
                "description": "Indicates a target EntryPoint for an Action."
            },
            "actionStatus": {
                "type": "string",
                "description": "Indicates the current disposition of the Action."
            },
            "instrument": {
                "type": "string",
                "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>."
            },
            "mainEntityOfPage": {
                "type": "string",
                "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details."
            },
            "location": {
                "type": "string",
                "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "toLocation": {
                "type": "string",
                "description": "A sub property of location. The final location of the object or the agent after the action."
            },
            "alternateName": {
                "type": "string",
                "description": "An alias for the item."
            },
            "sameAs": {
                "type": "string",
                "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
            },
            "agent": {
                "type": "string",
                "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book."
            }
        }
    }
}